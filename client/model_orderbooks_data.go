/*
GMO Coin APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: dev@tricoro.tech
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OrderbooksData struct for OrderbooksData
type OrderbooksData struct {
	Asks []OrderbooksDataAsks `json:"asks,omitempty"`
	Bids []OrderbooksDataAsks `json:"bids,omitempty"`
	Symbol *Symbols `json:"symbol,omitempty"`
}

// NewOrderbooksData instantiates a new OrderbooksData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderbooksData() *OrderbooksData {
	this := OrderbooksData{}
	return &this
}

// NewOrderbooksDataWithDefaults instantiates a new OrderbooksData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderbooksDataWithDefaults() *OrderbooksData {
	this := OrderbooksData{}
	return &this
}

// GetAsks returns the Asks field value if set, zero value otherwise.
func (o *OrderbooksData) GetAsks() []OrderbooksDataAsks {
	if o == nil || o.Asks == nil {
		var ret []OrderbooksDataAsks
		return ret
	}
	return o.Asks
}

// GetAsksOk returns a tuple with the Asks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderbooksData) GetAsksOk() ([]OrderbooksDataAsks, bool) {
	if o == nil || o.Asks == nil {
		return nil, false
	}
	return o.Asks, true
}

// HasAsks returns a boolean if a field has been set.
func (o *OrderbooksData) HasAsks() bool {
	if o != nil && o.Asks != nil {
		return true
	}

	return false
}

// SetAsks gets a reference to the given []OrderbooksDataAsks and assigns it to the Asks field.
func (o *OrderbooksData) SetAsks(v []OrderbooksDataAsks) {
	o.Asks = v
}

// GetBids returns the Bids field value if set, zero value otherwise.
func (o *OrderbooksData) GetBids() []OrderbooksDataAsks {
	if o == nil || o.Bids == nil {
		var ret []OrderbooksDataAsks
		return ret
	}
	return o.Bids
}

// GetBidsOk returns a tuple with the Bids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderbooksData) GetBidsOk() ([]OrderbooksDataAsks, bool) {
	if o == nil || o.Bids == nil {
		return nil, false
	}
	return o.Bids, true
}

// HasBids returns a boolean if a field has been set.
func (o *OrderbooksData) HasBids() bool {
	if o != nil && o.Bids != nil {
		return true
	}

	return false
}

// SetBids gets a reference to the given []OrderbooksDataAsks and assigns it to the Bids field.
func (o *OrderbooksData) SetBids(v []OrderbooksDataAsks) {
	o.Bids = v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *OrderbooksData) GetSymbol() Symbols {
	if o == nil || o.Symbol == nil {
		var ret Symbols
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderbooksData) GetSymbolOk() (*Symbols, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *OrderbooksData) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given Symbols and assigns it to the Symbol field.
func (o *OrderbooksData) SetSymbol(v Symbols) {
	o.Symbol = &v
}

func (o OrderbooksData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Asks != nil {
		toSerialize["asks"] = o.Asks
	}
	if o.Bids != nil {
		toSerialize["bids"] = o.Bids
	}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	return json.Marshal(toSerialize)
}

type NullableOrderbooksData struct {
	value *OrderbooksData
	isSet bool
}

func (v NullableOrderbooksData) Get() *OrderbooksData {
	return v.value
}

func (v *NullableOrderbooksData) Set(val *OrderbooksData) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderbooksData) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderbooksData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderbooksData(val *OrderbooksData) *NullableOrderbooksData {
	return &NullableOrderbooksData{value: val, isSet: true}
}

func (v NullableOrderbooksData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderbooksData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


